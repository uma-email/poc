Title UMA wide ecosystem - Bob from Alice (pull data)

actor "RO\nAlice" as Alice #lightpink
participant "AuthZ Server" as asServer #lightpink
participant "Resource Server (RS)" as rsServer #lightpink
participant "RqP Client" as rqpClient #lightsteelblue
participant "Claims Provider (CP)" as claimsProvider #lightsteelblue
participant "AuthN Server" as authServer #lightsteelblue
actor "RqP\nBob" as Bob #lightsteelblue

bottomparticipants
note over rqpClient:RqP Client is registered on Bob's AuthN server as well as Alices's AuthZ server
rqpClient<-Bob:Initiate request
rsServer<-rqpClient:1. Request Alice's 'Outgoing' resource
rsServer->rqpClient:2. 401 with permission ticket
alt RqP Client uses Authorization Code Grant - Bob is involved
rqpClient->authServer:3. Get access_token\n(grant_type=authorizatin_code, scope=claims-provider)
else RqP Client uses Client Credential Grant - Bob is not involved
rqpClient->authServer:3. Get access_token\n(grant_type=client_credentials, scope=claims-provider)
end
rqpClient<-authServer:4. Return access_token
note left of rqpClient:Create ticket_digest
alt RqP Client uses Authorization Code Grant - Bob is involved
claimsProvider<-rqpClient:5. Get claims_token\n(access_token, ticket_digest)
else RqP Client uses Client Credential Grant - Bob is not involved
claimsProvider<-rqpClient:5. Get claims_token\n(access_token, Bob's email_address, ticket_digest)
end
note right of claimsProvider:Claims Provider is assigned 'query-users' admin role
claimsProvider->authServer:Get access_token\n(grant_type=client_credentials)
claimsProvider<-authServer:Return access_token

alt RqP Client uses Authorization Code Grant - Bob is involved
note right of claimsProvider:Use Bob's email_address from request/access_token in step 5.
authServer<-claimsProvider:Get Bob's user_claims\n(access_token, Bob's email_address)
else RqP Client uses Client Credential Grant - Bob is not involved
note right of claimsProvider:Use Bob's email_address from request/parameter in step 5.
authServer<-claimsProvider:Get Bob's user_claims\n(access_token, Bob's email_address)
end
authServer->claimsProvider:Return Bob's user_claims


rqpClient<-claimsProvider:6. Return claims_token\n(Bob's user_claims, ticket_digest)
rqpClient->asServer:7. Call token endpoint\n(client_credentials, ticket, pushed_claims=claims_token + metadata)
group Authorization process
note over asServer:Evaluate\n1. ticket\n2. ticket_digest\n3. claims_token signature\n4. user_claims\n5. domain part of email_address
end
rqpClient<-asServer:8. Return RPT
rsServer<-rqpClient:9. Get data from Alice's 'Outgoing' resource\n(RPT)
rsServer->rqpClient:10. 200 OK