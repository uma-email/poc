participant "OIDC Server\nbar.com" as authServer
participant "RqP Client\nfoo.com or bar.com" as rqpClient
participant "Resource Server (RS)\nfoo.com" as rsServer
participant "UMA Server\nfoo.com" as asServer

bottomparticipants

note over authServer:OIDC Provider:\n• publishes its metadata on a URL https://bar.com/.well-known/oidc-configuration
note over rqpClient:RqP Client:\n• is pre-registered at bar.com OIDC Server and foo.com UMA Server as a universal public client
note over rsServer:foo.com admin has set up the RS and registers it's 'RS API' resource\nat the foo.com UMA Server with the associated scope 'get'
rsServer<-rqpClient:1. Request to 'RS API' resource\n(scope=get)
rsServer->rqpClient:2. 401 with permission ticket
rqpClient->rqpClient:3. ticket_challenge = Base64URL-Encode(SHA256(ticket))
rqpClient->authServer:4. Get id_token\n(grant_type=authorization_code, ticket_challenge, scope=universal-app)
rqpClient<-authServer:5. Return id_token (user_claims + ticket_challenge, "audience":["universal-app"])\n    if the payload is large, consider using PCT (see UMA specs. for details)

rqpClient->asServer:6. Call token endpoint\n(ticket, pushed_claims=id_token "audience":["universal-app"])
note over asServer:In addition to id_token, pushed claims may also contain metadata such as:\n• requester_info (email address, fullname)\n• file_info (filename, file size, file digest, mime type)
group Authorization process
note over asServer:1. extract user_claims from id_token\n2. select email_address claim\n3. bootstrap discovery of OIDC Provider config url from email address via WebFinger;\n    if this doesn't work, build well-known url using domain part of email_address\n4. verify id_token signature\n5. check audience=universal-app\n6. extract ticket_challenge claim from id_token\n7. compare ticket_challenge vs. Base64URL-Encode(SHA256(ticket))\n8. evaluate user_claims\n9. evaluate other optional claims e.g. recipient_info, file_info
end
rqpClient<-asServer:9. Return RPT
rsServer<-rqpClient:10. Get data from foo.com 'RS API' resource\n(RPT)
rsServer->rqpClient:11. 200 OK